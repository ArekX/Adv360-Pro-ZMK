
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp EQUAL     &kp N1         &kp N2    &kp N3     &kp N4  &kp N5                  &tog 1                                                                     &mo 3  &kp N6  &kp N7     &kp N8    &kp N9    &kp N0  &kp MINUS
   &kp TAB      &kp Q          &kp W     &kp E      &kp R   &kp T            &kp LA(FSLH)                                                             &kp LC(LS(K))   &kp Y   &kp U      &kp I     &kp O     &kp P   &kp BSLH
   &kp ESC      &kp A          &kp S     &kp D      &kp F   &kp G               &kp LC(P)  &kp LCTRL  &kp LALT                   &kp LGUI  &kp RCTRL  &kp LC(LS(D))   &kp H   &kp J      &kp K     &kp L  &kp SEMI    &kp SQT
 &kp LSHFT      &kp Z          &kp X     &kp C      &kp V   &kp B                                     &kp HOME                  &kp PG_UP                             &kp N   &kp M  &kp COMMA   &kp DOT  &kp FSLH  &kp RSHFT
     &mo 4  &kp GRAVE  &kp LA(MINUS)  &kp LEFT  &kp RIGHT                        &kp BSPC    &kp DEL   &kp END                  &kp PG_DN  &kp ENTER      &kp SPACE          &kp UP   &kp DOWN  &kp LBKT  &kp RBKT      &mo 2
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL     &kp N1           &kp N2         &kp N3             &kp N4      &kp N5                      &trans                                                                   &mo 3  &kp N6          &kp KP_NUM          &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
   &kp TAB      &kp Q            &kp W          &kp E   &kp C_AC_REFRESH  &kp C_STOP            &kp C_PLAY_PAUSE                                                              &kp C_NEXT   &kp Y           &kp KP_N7             &kp KP_N8      &kp KP_N9     &kp KP_MINUS   &kp BSLH
   &kp ESC      &kp A            &kp S          &kp D              &kp F       &kp G                  &kp C_MUTE  &kp INSERT  &kp LALT                   &kp LGUI  &kp RCTRL  &kp C_PREV   &kp H           &kp KP_N4             &kp KP_N5      &kp KP_N6      &kp KP_PLUS    &kp SQT
 &kp LSHFT      &kp Z            &kp X          &kp C              &kp V       &kp B                                          &kp HOME                  &kp PG_UP                          &kp N           &kp KP_N1             &kp KP_N2      &kp KP_N3     &kp KP_ENTER  &kp RSHFT
     &mo 2  &kp GRAVE  &kp PRINTSCREEN  &kp LA(MINUS)  &kp LS(LA(MINUS))                                &kp BSPC     &kp DEL   &kp END                  &kp PG_DN  &kp ENTER   &kp KP_N0          &kp C_AC_SCROLL_UP  &kp C_AC_SCROLL_DOWN     &kp KP_DOT         &kp RBKT      &mo 2
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2            &kp F3  &kp F4  &kp F5  &kp F6                     &tog 1                                                          &mo 3  &kp F7           &kp F8             &kp F9        &kp F10      &kp F11  &kp F12
 &trans  &trans            &trans  &trans  &trans  &trans            &kp C_AC_SEARCH                                                  &kp LC(LA(I))  &trans           &trans             &trans         &trans  &kp C_POWER   &trans
 &trans  &trans  &kp C_SLEEP_MODE  &trans  &trans  &trans              &kp LC(LS(F))  &trans  &trans                  &trans  &trans      &kp LC(L)  &trans           &trans             &trans  &kp C_AL_LOCK       &trans   &trans
 &trans  &trans            &trans  &trans  &trans  &trans                                     &trans                  &trans                         &trans           &trans             &trans         &trans       &trans   &trans
 &trans  &trans      &kp CAPSLOCK  &trans  &trans                             &trans  &trans  &trans                  &trans  &trans         &trans          &kp C_VOLUME_UP  &kp C_VOLUME_DOWN         &trans       &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none                                                                            &trans   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none            &bootloader                                                                       &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                  &none   &none   &none                    &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none    &macro_ver         &none                                  &none                  &out OUT_USB                                       &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none                                &none   &none   &none                  &out OUT_BLE  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC   &none   &none   &none
            >;
        };

        layer_NIS {
            bindings = <
 &trans  &kp LA(LS(NUMBER_1))  &kp LA(LS(N2))  &kp LA(LS(NUMBER_3))  &kp LA(LS(NUMBER_4))  &kp LA(LS(NUMBER_5))            &trans                                                  &trans  &kp LA(LS(N6))  &kp LA(LS(N7))  &kp LA(LS(N8))  &kp LA(LS(N9))  &kp LA(LS(N0))  &trans
 &trans         &kp LA(LS(Q))   &kp LA(LS(W))         &kp LA(LS(E))         &kp LA(LS(R))         &kp LA(LS(T))            &trans                                                  &trans   &kp LA(LS(Y))   &kp LA(LS(U))   &kp LA(LS(I))   &kp LA(LS(O))   &kp LA(LS(P))  &trans
 &trans         &kp LA(LS(A))   &kp LA(LS(S))         &kp LA(LS(D))         &kp LA(LS(F))         &kp LA(LS(G))            &trans  &trans  &trans                  &trans  &trans  &trans   &kp LA(LS(H))   &kp LA(LS(J))   &kp LA(LS(K))   &kp LA(LS(L))          &trans  &trans
 &trans         &kp LA(LS(Z))   &kp LA(LS(X))         &kp LA(LS(C))         &kp LA(LS(V))         &kp LA(LS(B))                            &trans                  &trans                   &kp LA(LS(N))   &kp LA(LS(M))          &trans          &trans          &trans  &trans
 &trans                &trans          &trans                &trans                &trans                                  &trans  &trans  &trans                  &trans  &trans  &trans                          &trans          &trans          &trans          &trans  &trans
            >;
        };

    };
};
